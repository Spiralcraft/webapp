<rpc:DispatchHandler
  xmlns:rpc="class:/spiralcraft/servlet/rpc/"
  xmlns:t="class:/spiralcraft/task/"
  xmlns:dt="class:/spiralcraft/data/task/"
  xmlns:swm="class:/spiralcraft/webapp/meta"
  xmlns:j="class:/java/lang/"
  xmlns:fn="class:/spiralcraft/lang/functions"
  xmlns:sec="class:/spiralcraft/security"
  xmlns:c="context://code/components"
  xmlns:st="class:/spiralcraft/time"
  >
  <debug>false
  </debug>
  <handlers>
    <rpc:JsonTaskHandler>
      <name>.startSession
      </name>
      <task>
        <t:Eval>
          <contextX>
            [#p] { resetCode:[@j:String] }
          </contextX>
          <x>
            (resetCode!=null
              ?[@sec:Ticket].@findByCode(resetCode)
                { .valid
                    ?([resetPassword]{.validatedTicket=..,.state="VERIFIED"})
                    :([resetPassword]{.validatedTicket=null,.state="FAILED"})
                }
              :null
            )
            {
              { 
                resetCodeValid:=[resetPassword].validatedTicket!=null
                ,username:=[resetPassword].validatedTicket.login.searchname
              }
            }
          </x> 
        </t:Eval>
      </task>
    </rpc:JsonTaskHandler>
    <rpc:JsonTaskHandler>
      <name>.setNewPassword
      </name>
      <task>
        <t:Eval>
          <contextX>
            [#p] { passwordDigest:[@j:String] }
          </contextX>
          <x>.{ [resetPassword].validatedTicket.login.[*dt:Edit{ action:=`.digestpass=[p].passwordDigest`}].().@log(.)
                ,[resetPassword].validatedTicket.[*dt:Edit{ action:=`.revoked=true` }].().@log(.)
                ,{ resetCodeValid:= false }
              }
          </x> 
        </t:Eval>
      </task>
    </rpc:JsonTaskHandler>
    <rpc:JsonTaskHandler>
      <name>.requestPasswordReset
      </name>
      <task>
        <t:Eval>
          <contextX>
            [#p] { username:[@j:String] }
          </contextX>
          <x>[resetPassword]
              { .login=[@sec:Login].@findBySearchName([p].username)
                ,.user=[@swm:User].@findByPrincipalId(.login.principalId)
                ,.ticket=[@sec:Ticket].@create
                   (.login.principalId
                   ,[@st:Chronom].@MINUTE.times(30)
                   )
                ,.user.email!=null
                   ?[*c:resetPassword-sendCode].
                       (.user.email
                         ,.user.commonName
                         ,.ticket.code
                       )
                     :@log("Reset code for non-system login is "+[resetPassword].ticket.code)
                 ,.state="SENT"
               }
          </x> 
        </t:Eval>
      </task>
    </rpc:JsonTaskHandler>
    
  </handlers>
</rpc:DispatchHandler>
