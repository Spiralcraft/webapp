<af:SessionStateFilter
  xmlns:af="class:/spiralcraft/servlet/autofilter/"
  xmlns:waan="class:/spiralcraft/webapp/analytics/"
  xmlns:dt="class:/spiralcraft/data/task/"
  xmlns:http="class:/javax/servlet/http/"
  xmlns:fn="class:/spiralcraft/lang/functions/">
        
  <constructor>
    [@waan:Session].@nil
      .[*dt:Edit{autoCreate:=true}].()
      {.cookie=[http:HttpSession].id
       ,.clientAddress=[http:HttpServletRequest].remoteAddr
       ,.userAgent=[http:HttpServletRequest].getHeader("User-Agent")
       ,.referrer=[http:HttpServletRequest].getHeader("Referer")
       ,.requestURL=[http:HttpServletRequest].getRequestURL().toString()
       ,.
      }
      .@log("Constructed "+.)
  </constructor>
        
  <onBind>[@waan:LogEvent].(eventCode:="spiralcraft.webapp.start").log()
  </onBind>
  
  <onEstablish>
    [#ctx]
    {
      newSession:= [waan:Session]
      ,dbSession:= [*dt:Fetch{[@waan:Session], [{ `cookie:= [http:HttpSession].id` }]}].()
    }
    { [ctx].newSession.@log("Established "+.)
    , [ctx].dbSession==null &amp;&amp; [ctx].newSession.id==null
       ?[ctx].newSession.[*dt:Edit{autoSave:=true,forceSave:=true}].()
       :[ctx].dbSession.@log("Already saved "+.)
    }
      
  </onEstablish>
  
</af:SessionStateFilter>  